{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://palettejson.org/schema/v0.1/palettejson.schema.json",
  "title": "PaletteJSON v0.1",
  "description": "A portable JSON container for color palettes.",
  "$comment": "PaletteJSON specification is maintained by Pedro Innecco (pedroinnecco.com) under the palettejson.org project.",
  "type": "object",
  "required": ["palettes"],
  "additionalProperties": false,
  "properties": {
    "$schema": { "type": "string", "format": "uri" },
    "specVersion": { "type": "string", "pattern": "^0\\.1(\\..*)?$" },
    "palettes": {
      "type": "array",
      "minItems": 1,
      "items": { "$ref": "#/$defs/Palette" }
    }
  },
  "$defs": {
    "Palette": {
      "type": "object",
      "required": ["name", "slug", "type", "colors"],
      "additionalProperties": false,
      "properties": {
        "name": { "type": "string" },
        "slug": { "type": "string", "pattern": "^[a-z0-9]+(?:-[a-z0-9]+)*$" },
        "description": { "type": "string" },
        "version": { "type": "string" },
        "author": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "name": { "type": "string" },
            "url": { "type": "string", "format": "uri" }
          }
        },
        "license": { "type": "string" },
        "tags": { "type": "array", "items": { "type": "string" } },
        "type": {
          "type": "string",
          "enum": ["categorical", "sequential", "diverging"]
        },
        "colorRepresentation": {
          "type": "string",
          "enum": [
            "DisplayP3",
            "Lab",
            "OKLCH",
            "sRGB",
            "sRGB-linear-extended",
            "HSL"
          ],
          "default": "sRGB",
          "$comment": "Applies only to colors using `components`. Entries with `hex` are always interpreted as display sRGB."
        },
        "colors": {
          "type": "array",
          "minItems": 2,
          "items": { "$ref": "#/$defs/Color" }
        },

        "accessibility": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "cvdTestedFor": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "protanopia",
                  "deuteranopia",
                  "tritanopia",
                  "achromatopsia"
                ]
              }
            },
            "cvdMaxDistinctClasses": {
              "type": "object",
              "additionalProperties": { "type": "integer", "minimum": 1 }
            },
            "tools": { "type": "array", "items": { "type": "string" } },
            "notes": { "type": "string" }
          }
        },
        "aliases": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": { "type": "string" }
          }
        }
      },

      "allOf": [
        {
          "if": {
            "properties": {
              "colors": {
                "contains": { "required": ["position"] }
              }
            }
          },
          "then": {
            "properties": {
              "colors": {
                "items": { "required": ["position"] }
              }
            }
          },
          "$comment": "Consistency guard: if one color has an explicit position, require all to have it."
        },
        {
          "if": {
            "properties": {
              "colors": {
                "contains": { "required": ["components"] }
              }
            }
          },
          "then": { "required": ["colorRepresentation"] }
        },
        {
          "if": {
            "properties": { "colorRepresentation": { "const": "DisplayP3" } }
          },
          "then": {
            "properties": {
              "colors": {
                "items": {
                  "if": { "required": ["components"] },
                  "then": {
                    "properties": {
                      "components": {
                        "type": "array",
                        "minItems": 3,
                        "maxItems": 4,
                        "items": {
                          "type": "number",
                          "minimum": 0,
                          "maximum": 1
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "if": { "properties": { "colorRepresentation": { "const": "Lab" } } },
          "then": {
            "properties": {
              "colors": {
                "items": {
                  "if": { "required": ["components"] },
                  "then": {
                    "properties": {
                      "components": {
                        "oneOf": [
                          {
                            "type": "array",
                            "minItems": 3,
                            "maxItems": 3,
                            "items": [
                              { "type": "number", "minimum": 0, "maximum": 100 },
                              { "type": "number" },
                              { "type": "number" }
                            ]
                          },
                          {
                            "type": "array",
                            "minItems": 4,
                            "maxItems": 4,
                            "items": [
                              { "type": "number", "minimum": 0, "maximum": 100 },
                              { "type": "number" },
                              { "type": "number" },
                              { "type": "number", "minimum": 0, "maximum": 1 }
                            ]
                          }
                        ],
                        "$comment": "Lab: L (0-100), a/b unbounded, optional alpha (0-1). D50 illuminant per CSS Color Module 4."
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "if": {
            "properties": { "colorRepresentation": { "const": "OKLCH" } }
          },
          "then": {
            "properties": {
              "colors": {
                "items": {
                  "if": { "required": ["components"] },
                  "then": {
                    "properties": {
                      "components": {
                        "oneOf": [
                          {
                            "type": "array",
                            "minItems": 3,
                            "maxItems": 3,
                            "items": [
                              { "type": "number", "minimum": 0, "maximum": 1 },
                              { "type": "number", "minimum": 0 },
                              {
                                "type": "number",
                                "minimum": 0,
                                "exclusiveMaximum": 360
                              }
                            ]
                          },
                          {
                            "type": "array",
                            "minItems": 4,
                            "maxItems": 4,
                            "items": [
                              { "type": "number", "minimum": 0, "maximum": 1 },
                              { "type": "number", "minimum": 0 },
                              {
                                "type": "number",
                                "minimum": 0,
                                "exclusiveMaximum": 360
                              },
                              { "type": "number", "minimum": 0, "maximum": 1 }
                            ]
                          }
                        ],
                        "$comment": "OKLCH: L (0-1), C (â‰¥0), H (0-360), optional alpha (0-1)"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "if": {
            "properties": { "colorRepresentation": { "const": "sRGB" } }
          },
          "then": {
            "properties": {
              "colors": {
                "items": {
                  "if": { "required": ["components"] },
                  "then": {
                    "properties": {
                      "components": {
                        "type": "array",
                        "minItems": 3,
                        "maxItems": 4,
                        "items": {
                          "type": "number",
                          "minimum": 0,
                          "maximum": 1
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "colorRepresentation": { "const": "sRGB-linear-extended" }
            }
          },
          "then": {
            "properties": {
              "colors": {
                "items": {
                  "if": { "required": ["components"] },
                  "then": {
                    "properties": {
                      "components": {
                        "oneOf": [
                          {
                            "type": "array",
                            "minItems": 3,
                            "maxItems": 3,
                            "items": [
                              { "type": "number" },
                              { "type": "number" },
                              { "type": "number" }
                            ]
                          },
                          {
                            "type": "array",
                            "minItems": 4,
                            "maxItems": 4,
                            "items": [
                              { "type": "number" },
                              { "type": "number" },
                              { "type": "number" },
                              { "type": "number", "minimum": 0, "maximum": 1 }
                            ]
                          }
                        ],
                        "$comment": "sRGB-linear-extended: R/G/B unbounded (supports HDR/negative for wide-gamut), optional alpha (0-1)"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "if": { "properties": { "colorRepresentation": { "const": "HSL" } } },
          "then": {
            "properties": {
              "colors": {
                "items": {
                  "if": { "required": ["components"] },
                  "then": {
                    "properties": {
                      "components": {
                        "oneOf": [
                          {
                            "type": "array",
                            "minItems": 3,
                            "maxItems": 3,
                            "items": [
                              {
                                "type": "number",
                                "minimum": 0,
                                "exclusiveMaximum": 360
                              },
                              { "type": "number", "minimum": 0, "maximum": 1 },
                              { "type": "number", "minimum": 0, "maximum": 1 }
                            ]
                          },
                          {
                            "type": "array",
                            "minItems": 4,
                            "maxItems": 4,
                            "items": [
                              {
                                "type": "number",
                                "minimum": 0,
                                "exclusiveMaximum": 360
                              },
                              { "type": "number", "minimum": 0, "maximum": 1 },
                              { "type": "number", "minimum": 0, "maximum": 1 },
                              { "type": "number", "minimum": 0, "maximum": 1 }
                            ]
                          }
                        ],
                        "$comment": "HSL: H (0-360), S (0-1), L (0-1), optional alpha (0-1)"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      ]
    },
    "Color": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "id": {
          "type": "string",
          "pattern": "^[A-Za-z0-9][A-Za-z0-9._-]*$"
        },
        "name": { "type": "string" },

        "hex": {
          "type": "string",
          "oneOf": [
            { "pattern": "^#([A-Fa-f0-9]{6})$" },
            { "pattern": "^#([A-Fa-f0-9]{8})$" }
          ],
          "$comment": "Hex can be #RRGGBB or #RRGGBBAA. Alpha is the last pair (AA). It is gamma-encoded and always interpreted as display sRGB."
        },

        "components": {
          "type": "array",
          "minItems": 3,
          "maxItems": 4,
          "items": { "type": "number" }
        },

        "altRepresentations": {
          "type": "array",
          "items": {
            "allOf": [
              {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "colorRepresentation": {
                    "type": "string",
                    "enum": [
                      "DisplayP3",
                      "Lab",
                      "OKLCH",
                      "sRGB",
                      "sRGB-linear-extended",
                      "HSL"
                    ]
                  },
                  "components": { "type": "array" }
                }
              },
              { "$ref": "#/$defs/ColorRepresentationValidation" }
            ]
          }
        },

        "references": {
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "system": {
                "type": "string",
                "enum": ["pantone", "ral", "ncs", "other"]
              },
              "code": { "type": "string" },
              "library": { "type": "string" },
              "collection": { "type": "string" },
              "note": { "type": "string" }
            },
            "required": ["system", "code"]
          }
        },

        "position": {
          "type": "integer",
          "minimum": 1,
          "$comment": "1-based order index. If any color in a palette has position, sort by it; use array order only as tiebreaker."
        },
        "notes": { "type": "string" },
        "legibility": { "$ref": "#/$defs/Legibility" }
      },
      "anyOf": [{ "required": ["hex"] }, { "required": ["components"] }]
    },
    "ColorRepresentationValidation": {
      "type": "object",
      "required": ["colorRepresentation", "components"],
      "$comment": "Designed for self-contained color entries (altRepresentations). Palette-level validation is intentionally separate, because colors there inherit colorRepresentation.",
      "allOf": [
        {
          "if": {
            "properties": { "colorRepresentation": { "const": "DisplayP3" } }
          },
          "then": {
            "properties": {
              "components": {
                "type": "array",
                "minItems": 3,
                "maxItems": 4,
                "items": { "type": "number", "minimum": 0, "maximum": 1 }
              }
            }
          }
        },
        {
          "if": { "properties": { "colorRepresentation": { "const": "Lab" } } },
          "then": {
            "properties": {
              "components": {
                "oneOf": [
                  {
                    "type": "array",
                    "minItems": 3,
                    "maxItems": 3,
                    "items": [
                      { "type": "number", "minimum": 0, "maximum": 100 },
                      { "type": "number" },
                      { "type": "number" }
                    ]
                  },
                  {
                    "type": "array",
                    "minItems": 4,
                    "maxItems": 4,
                    "items": [
                      { "type": "number", "minimum": 0, "maximum": 100 },
                      { "type": "number" },
                      { "type": "number" },
                      { "type": "number", "minimum": 0, "maximum": 1 }
                    ]
                  }
                ],
                "$comment": "Lab: L (0-100), a/b unbounded, optional alpha (0-1). D50 illuminant per CSS Color Module 4."
              }
            }
          }
        },
        {
          "if": {
            "properties": { "colorRepresentation": { "const": "OKLCH" } }
          },
          "then": {
            "properties": {
              "components": {
                "oneOf": [
                  {
                    "type": "array",
                    "minItems": 3,
                    "maxItems": 3,
                    "items": [
                      { "type": "number", "minimum": 0, "maximum": 1 },
                      { "type": "number", "minimum": 0 },
                      { "type": "number", "minimum": 0, "exclusiveMaximum": 360 }
                    ]
                  },
                  {
                    "type": "array",
                    "minItems": 4,
                    "maxItems": 4,
                    "items": [
                      { "type": "number", "minimum": 0, "maximum": 1 },
                      { "type": "number", "minimum": 0 },
                      { "type": "number", "minimum": 0, "exclusiveMaximum": 360 },
                      { "type": "number", "minimum": 0, "maximum": 1 }
                    ]
                  }
                ],
                "$comment": "OKLCH: L (0-1), C (â‰¥0), H (0-360), optional alpha (0-1)"
              }
            }
          }
        },
        {
          "if": {
            "properties": { "colorRepresentation": { "const": "sRGB" } }
          },
          "then": {
            "properties": {
              "components": {
                "type": "array",
                "minItems": 3,
                "maxItems": 4,
                "items": { "type": "number", "minimum": 0, "maximum": 1 }
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "colorRepresentation": { "const": "sRGB-linear-extended" }
            }
          },
          "then": {
            "properties": {
              "components": {
                "oneOf": [
                  {
                    "type": "array",
                    "minItems": 3,
                    "maxItems": 3,
                    "items": [
                      { "type": "number" },
                      { "type": "number" },
                      { "type": "number" }
                    ]
                  },
                  {
                    "type": "array",
                    "minItems": 4,
                    "maxItems": 4,
                    "items": [
                      { "type": "number" },
                      { "type": "number" },
                      { "type": "number" },
                      { "type": "number", "minimum": 0, "maximum": 1 }
                    ]
                  }
                ],
                "$comment": "sRGB-linear-extended: R/G/B unbounded (supports HDR/negative for wide-gamut), optional alpha (0-1)"
              }
            }
          }
        },
        {
          "if": { "properties": { "colorRepresentation": { "const": "HSL" } } },
          "then": {
            "properties": {
              "components": {
                "oneOf": [
                  {
                    "type": "array",
                    "minItems": 3,
                    "maxItems": 3,
                    "items": [
                      { "type": "number", "minimum": 0, "exclusiveMaximum": 360 },
                      { "type": "number", "minimum": 0, "maximum": 1 },
                      { "type": "number", "minimum": 0, "maximum": 1 }
                    ]
                  },
                  {
                    "type": "array",
                    "minItems": 4,
                    "maxItems": 4,
                    "items": [
                      { "type": "number", "minimum": 0, "exclusiveMaximum": 360 },
                      { "type": "number", "minimum": 0, "maximum": 1 },
                      { "type": "number", "minimum": 0, "maximum": 1 },
                      { "type": "number", "minimum": 0, "maximum": 1 }
                    ]
                  }
                ],
                "$comment": "HSL: H (0-360), S (0-1), L (0-1), optional alpha (0-1)"
              }
            }
          }
        }
      ]
    },
    "Legibility": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "luminance": { "type": "number", "minimum": 0, "maximum": 1 },
        "contrastVsWhite": {
          "type": "number",
          "minimum": 1,
          "maximum": 21,
          "description": "WCAG 2.x contrast ratio (1:1 to 21:1) against white (#FFFFFF, sRGB)"
        },
        "contrastVsBlack": {
          "type": "number",
          "minimum": 1,
          "maximum": 21,
          "description": "WCAG 2.x contrast ratio (1:1 to 21:1) against black (#000000, sRGB)"
        },
        "preferredText": { "type": "string", "enum": ["light", "dark"] }
      }
    }
  }
}
